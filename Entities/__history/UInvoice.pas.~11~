unit UInvoice;

interface

uses System.Types;

type
  Invoice = class
    private FBasicPayment: double;
    private FTax: Double;
    private procedure SetBasicPayment(const Value: double);
    private procedure SetTax(const Value: Double);
    public function TotalPaymet: Double;
    public property BasicPayment: Double read FBasicPayment write SetBasicPayment;
    public property Tax: Double read FTax write SetTax;
    public function ToString():string; override ;

  end;

implementation

procedure Invoice.SetBasicPayment(const Value: double);
begin
  FBasicPayment := Value;
end;

procedure Invoice.SetTax(const Value: Double);
begin
  FTax := Value;
end;

function Invoice.ToString: string;
begin
        result := '=============INVOICE=============' +
                  'Basic payment:' + FBasicPayment +
                  'Tax: ' + Tax.ToString() +
                  'Total payment: ' + TotalPayment.ToString() +
                  '=============INVOICE=============';
end;

function Invoice.TotalPaymet: Double;
begin
  result:= FBasicPayment + FTax;

end;

end.
